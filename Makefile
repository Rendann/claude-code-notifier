# Claude Code Notifier - Development Commands

.PHONY: help install test format lint typecheck check clean

help: ## Show this help
	@echo "Available commands:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2}'

# ============================================================================
# CORE DEVELOPMENT
# ============================================================================

install: ## Install development dependencies
	pip install -e ".[dev]"

format: ## Format code with ruff
	@ruff format src/ tests/ && echo "‚úÖ FORMAT: PASSED" || (echo "‚ùå FORMAT: FAILED" && false)

lint: ## Lint with ruff
	@ruff check src/ tests/ --output-format=github && echo "‚úÖ LINT: PASSED" || (echo "‚ùå LINT: FAILED" && false)

typecheck: ## Type check with mypy
	@mypy && echo "‚úÖ TYPECHECK: PASSED" || (echo "‚ùå TYPECHECK: FAILED" && false)

test: ## Run tests
	@pytest && echo "‚úÖ TEST: PASSED" || (echo "‚ùå TEST: FAILED" && false)

check: ## Run comprehensive quality checks
	@echo "üîç Running comprehensive quality checks..."
	@$(MAKE) -k format lint typecheck test && echo "\nüéâ CHECK PASSED" || echo "\n‚ùå CHECK FAILED"

fix: ## Auto-fix all issues (format + lint + cleanup)
	@echo "üîß Auto-fixing all issues..."
	@ruff format src/ tests/ && echo "‚úÖ FORMAT-FIX: APPLIED" || echo "‚ö†Ô∏è FORMAT-FIX: ISSUES FOUND"
	@ruff check src/ tests/ --fix --unsafe-fixes && echo "‚úÖ LINT-FIX: APPLIED" || echo "‚ö†Ô∏è LINT-FIX: SOME ISSUES REMAIN"
	@echo "üéâ Auto-fixes completed (run 'make check' to see remaining issues)"

clean: ## Clean up temporary files
	find . -type d -name "__pycache__" -delete
	find . -type f -name "*.pyc" -delete
	find . -type d -name ".pytest_cache" -delete
	find . -type d -name ".ruff_cache" -delete
	find . -type d -name "*.egg-info" -exec rm -rf {} +
	@echo "‚úÖ Cleaned temporary files"
